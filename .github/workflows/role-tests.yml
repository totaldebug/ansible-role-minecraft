---
name: CI

on:
  push:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  yaml_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running YAMLlint
        uses: "docker://pipelinecomponents/yamllint:latest"
        with:
          args: yamllint .
  remark_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Remark lint
        uses: "docker://pipelinecomponents/remark-lint:latest"
        continue-on-error: true
        with:
          args: "remark --no-stdout --color --frail --use preset-lint-recommended ."
  ansible_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v2
      - name: Lint Ansible Role
        # replace "master" with any valid ref
        uses: ansible/ansible-lint-action@master
  check_role:
    runs-on: ubuntu-latest
    needs: [yaml_lint, remark_lint, ansible_lint]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        molecule_distro:
          #- centos8
          #- centos7
          #- ubuntu2004
          #- ubuntu1804
          - debian10
        molecule_playbook:
          - converge-minecraft.yml
          - converge-spigot.yml
    env:
      ANSIBLE_CALLBACK_WHITELIST: profile_tasks
      ROLE_NAME: minecraft

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -V
          python3 -V
          python -m pip install --upgrade pip
          python3 -m pip install molecule[docker]
      - name: Test with molecule
        run: |
          molecule test
        env:
          MOLECULE_DISTRO: ${{ matrix.molecule_distro }}
          MOLECULE_PLAYBOOK: ${{ matrix.molecule_playbook }}
